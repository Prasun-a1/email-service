generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  role      RoleEnum  @default(USER)
  email     String    @unique
  profile   Profile?
  password  String
  verified  Boolean   @default(false)
  sessions  Session[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // A user belongs to a single organization
  organization   Organization? @relation("UserOrganization", fields: [organizationId], references: [id])
  organizationId Int?

  // A user can be an admin of one organization (if assigned)
  verificationToken String? @unique

  Organization Organization[] @relation("OrganizationAdmin")
}

model Profile {
  id        Int     @id @default(autoincrement())
  bio       String?
  user      User    @relation(fields: [userId], references: [id])
  userId    Int     @unique
  firstName String
  lastName  String
}

model Organization {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Members of the organization (each user belongs to only one organization)
  users User[] @relation("UserOrganization")

  // One orgAdmin per organization
  orgAdminEmail String @unique
  // orgAdmin   User @relation("OrganizationAdmin", fields: [orgAdminId], references: [id])

  User User[] @relation("OrganizationAdmin")
}

model Session {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  token     String   @unique
  userId    Int
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  expiresAt DateTime
}

enum RoleEnum {
  SUPER_ADMIN
  ORG_ADMIN
  ADMIN
  MEMBERS
  USER
}
